{"version":3,"sources":["components/CharacterCard.js","components/CharacterList.js","components/Filters.js","components/CharacterDetail.js","services/apiCharacters.js","components/App.js","reportWebVitals.js","index.js"],"names":["CharacterCard","props","to","id","src","image","alt","name","title","species","defaultProps","CharacterList","charactersToRender","characters","filter","character","toUpperCase","includes","searchValue","map","length","Filters","htmlFor","placeholder","onChange","ev","inputValue","currentTarget","value","handleInputChange","onKeyPress","keyCode","preventDefault","type","CharacterDetail","parseInt","match","params","origin","episode","status","getInfoFromApi","fetch","then","response","json","App","useState","setCharacters","setSearchValue","useEffect","data","results","exact","path","render","routerProps","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"mOAGMA,EAAgB,SAACC,GACrB,OACE,cAAC,IAAD,CAAMC,GAAI,cAAgBD,EAAME,GAAhC,SACE,oCACE,qBACEC,IAAKH,EAAMI,MACXC,IAAK,oBAAmBL,EAAMM,KAC9BC,MAAO,oBAAmBP,EAAMM,OAElC,6BAAKN,EAAMM,OACX,2CAAgC,UAAlBN,EAAMQ,QAAsB,SAAW,iBAY7DT,EAAcU,aAAe,CAC3BH,KAAM,uBACNE,QAAS,sBACTJ,MACE,mFAGWL,QCKAW,EAlCO,SAACV,GACrB,IAAMW,EAAqBX,EAAMY,WAC9BC,QAAO,SAACC,GAAD,OACNA,EAAUR,KAAKS,cAAcC,SAAShB,EAAMiB,YAAYF,kBAEzDG,KAAI,SAACJ,GACJ,OACE,6BACE,cAAC,EAAD,CACER,KAAMQ,EAAUR,KAChBF,MAAOU,EAAUV,MACjBI,QAASM,EAAUN,QACnBN,GAAIY,EAAUZ,MALTY,EAAUZ,OAUzB,OAAkC,IAA9BS,EAAmBQ,OACd,6BAAKR,IAGV,yFACwDX,EAAMiB,YAD9D,QCaSG,EAnCC,SAACpB,GAYf,OACE,iCACE,uBAAOqB,QAAQ,aAAf,yDAGA,uBACEC,YAAY,mBACZC,SAlBoB,SAACC,GACzB,IAAMC,EAAaD,EAAGE,cAAcC,MACpC3B,EAAM4B,kBAAkBH,IAiBpBI,WAdmB,SAACL,GACL,OAAfA,EAAGM,SACLN,EAAGO,kBAaD7B,GAAG,aACHI,KAAK,aACL0B,KAAK,OACLL,MAAO3B,EAAMiB,kBCyBNgB,EAhDS,SAACjC,GAwCvB,OAvC0BA,EAAMY,WAC7BC,QAAO,SAACC,GAAD,OAAeA,EAAUZ,KAAOgC,SAASlC,EAAMmC,MAAMC,OAAOlC,OACnEgB,KAAI,SAACJ,GACJ,OACE,oCACE,cAAC,IAAD,CAAMb,GAAG,IAAT,oBACA,qBACEE,IAAKW,EAAUV,MACfC,IAAK,WAAaS,EAAUR,KAC5BC,MAAM,WAER,6BAAKO,EAAUR,OACf,+BACE,2CACkC,UAAtBQ,EAAUN,QAAsB,SAAW,WAEvD,oDACqB,IACQ,kCAA1BM,EAAUuB,OAAO/B,KACd,qCAC0B,kBAA1BQ,EAAUuB,OAAO/B,KACjB,8BAC0B,aAA1BQ,EAAUuB,OAAO/B,KACjB,WACA,wBAEN,0DAA0BQ,EAAUwB,QAAQnB,UAC5C,uDACwB,IACA,UAArBL,EAAUyB,OACP,OACqB,SAArBzB,EAAUyB,OACV,SACA,sBA7BIzB,EAAUZ,QCAjBsC,EARQ,WACrB,OAAOC,MACL,uFACAC,MAAK,SAACC,GACN,OAAOA,EAASC,W,OCmDLC,MA/Cf,WAAgB,IAAD,EACuBC,mBAAS,IADhC,mBACNlC,EADM,KACMmC,EADN,OAEyBD,mBAAS,IAFlC,mBAEN7B,EAFM,KAEO+B,EAFP,KAkBb,OAJAC,qBAAU,WATRT,IAAiBE,MAAK,SAACQ,GACrBH,EAAcG,EAAKC,cAUpB,IAGD,qCACE,iCACE,gDAEF,+BACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,UACE,cAAC,EAAD,CACEpC,YAAaA,EACbW,kBAlBc,SAACH,GACzBuB,EAAevB,MAmBP,cAAC,EAAD,CAAeR,YAAaA,EAAaL,WAAYA,OAEvD,cAAC,IAAD,CACEyC,KAAK,iBACLC,OAAQ,SAACC,GAAD,OACN,cAAC,EAAD,CACEpB,MAAOoB,EAAYpB,MACnBvB,WAAYA,gBCjCb4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASV,OACP,cAAC,IAAMW,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAG1BX,M","file":"static/js/main.69b3d30f.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CharacterCard = (props) => {\r\n  return (\r\n    <Link to={\"/character/\" + props.id}>\r\n      <article>\r\n        <img\r\n          src={props.image}\r\n          alt={\"Fotografía de \" + props.name}\r\n          title={\"Fotografía de \" + props.name}\r\n        />\r\n        <h2>{props.name}</h2>\r\n        <h3>Especie: {props.species === \"Human\" ? \"Humana\" : \"Alien\"}</h3>\r\n      </article>\r\n    </Link>\r\n  );\r\n};\r\n\r\nCharacterCard.propTypes = {\r\n  name: PropTypes.string,\r\n  image: PropTypes.string,\r\n  species: PropTypes.string,\r\n};\r\n\r\nCharacterCard.defaultProps = {\r\n  name: \"Personaje anónimo\",\r\n  species: \"Especie desconocida\",\r\n  image:\r\n    \"https://raw.githubusercontent.com/Adalab/rick-y-morty/master/assets/img/19.jpeg\",\r\n};\r\n\r\nexport default CharacterCard;\r\n","import PropTypes from \"prop-types\";\r\nimport CharacterCard from \"./CharacterCard\";\r\n\r\nconst CharacterList = (props) => {\r\n  const charactersToRender = props.characters\r\n    .filter((character) =>\r\n      character.name.toUpperCase().includes(props.searchValue.toUpperCase())\r\n    )\r\n    .map((character) => {\r\n      return (\r\n        <li key={character.id}>\r\n          <CharacterCard\r\n            name={character.name}\r\n            image={character.image}\r\n            species={character.species}\r\n            id={character.id}\r\n          />\r\n        </li>\r\n      );\r\n    });\r\n  if (charactersToRender.length !== 0) {\r\n    return <ul>{charactersToRender}</ul>;\r\n  } else {\r\n    return (\r\n      <p>\r\n        No hay ningún personaje que coincida con la palabra \"{props.searchValue}\r\n        \"\r\n      </p>\r\n    );\r\n  }\r\n};\r\n\r\nCharacterList.propTypes = {\r\n  characters: PropTypes.array,\r\n  searchValue: PropTypes.string,\r\n};\r\n\r\nexport default CharacterList;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst Filters = (props) => {\r\n  const handleInputChange = (ev) => {\r\n    const inputValue = ev.currentTarget.value;\r\n    props.handleInputChange(inputValue);\r\n  };\r\n\r\n  const handleInputEnter = (ev) => {\r\n    if (ev.keyCode === \"13\") {\r\n      ev.preventDefault();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <label htmlFor=\"userSearch\">\r\n        Introduce el nombre del personaje a buscar:\r\n      </label>\r\n      <input\r\n        placeholder=\"Ej. Rick Sanchez\"\r\n        onChange={handleInputChange}\r\n        onKeyPress={handleInputEnter}\r\n        id=\"userSearch\"\r\n        name=\"userSearch\"\r\n        type=\"text\"\r\n        value={props.searchValue}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nFilters.propTypes = {\r\n  searchValue: PropTypes.string,\r\n  handleInputChange: PropTypes.func,\r\n};\r\n\r\nexport default Filters;\r\n","import PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CharacterDetail = (props) => {\r\n  const selectedCharacter = props.characters\r\n    .filter((character) => character.id === parseInt(props.match.params.id))\r\n    .map((character) => {\r\n      return (\r\n        <article key={character.id}>\r\n          <Link to=\"/\">Volver</Link>\r\n          <img\r\n            src={character.image}\r\n            alt={\"Foto de \" + character.name}\r\n            title=\"Nombre\"\r\n          />\r\n          <h2>{character.name}</h2>\r\n          <ul>\r\n            <li>\r\n              Especie: {character.species === \"Human\" ? \"Humana\" : \"Alien\"}\r\n            </li>\r\n            <li>\r\n              Planeta de origen:{\" \"}\r\n              {character.origin.name === \"Earth (Replacement Dimension)\"\r\n                ? \"Tierra (Dimensión de reemplazo)\"\r\n                : character.origin.name === \"Earth (C-137)\"\r\n                ? \"Tierra (Dimensión C-137)\"\r\n                : character.origin.name === \"Abadango\"\r\n                ? \"Abadango\"\r\n                : \"Origen desconocido\"}\r\n            </li>\r\n            <li>Número de episodios: {character.episode.length}</li>\r\n            <li>\r\n              Estado del personaje:{\" \"}\r\n              {character.status === \"Alive\"\r\n                ? \"Vivo\"\r\n                : character.status === \"Dead\"\r\n                ? \"Muerto\"\r\n                : \"Desconocido\"}\r\n            </li>\r\n          </ul>\r\n        </article>\r\n      );\r\n    });\r\n  return selectedCharacter;\r\n};\r\n\r\nCharacterDetail.propTypes = {\r\n  characters: PropTypes.array,\r\n  match: PropTypes.object,\r\n};\r\n\r\nexport default CharacterDetail;\r\n","const getInfoFromApi = () => {\r\n  return fetch(\r\n    \"https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json\"\r\n  ).then((response) => {\r\n    return response.json();\r\n  });\r\n};\r\n\r\nexport default getInfoFromApi;\r\n","import \"../stylesheets/App.css\";\nimport CharacterList from \"./CharacterList\";\nimport Filters from \"./Filters\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport getInfoFromApi from \"../services/apiCharacters\";\nimport { useEffect, useState } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [characters, setCharacters] = useState([]);\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  const getApiResults = () => {\n    getInfoFromApi().then((data) => {\n      setCharacters(data.results);\n    });\n  };\n\n  const handleInputChange = (inputValue) => {\n    setSearchValue(inputValue);\n  };\n\n  useEffect(() => {\n    getApiResults();\n  }, []);\n\n  return (\n    <>\n      <header>\n        <h1>Rick y Morty</h1>\n      </header>\n      <main>\n        <Switch>\n          <Route exact path=\"/\">\n            <Filters\n              searchValue={searchValue}\n              handleInputChange={handleInputChange}\n            />\n            <CharacterList searchValue={searchValue} characters={characters} />\n          </Route>\n          <Route\n            path=\"/character/:id\"\n            render={(routerProps) => (\n              <CharacterDetail\n                match={routerProps.match}\n                characters={characters}\n              />\n            )}\n          ></Route>\n        </Switch>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}